---
- name: Debug
  ansible.builtin.debug:
    msg: "START network.reports gather operation integration tests on connection={{ ansible_connection }}"

- name: Perform gather operation for network resources
  block:
    - name: Run network.reports.gather role to collect interface information
      ansible.builtin.include_role:
        name: network.reports.gather
      vars:
        resources:
          - "bgp_global"
          - "bgp_address_family"
          - "ospf_interfaces"
          - "ospfv2"

    - name: Determine network OS
      ansible.builtin.set_fact:
        detected_os: "{{ ansible_network_os | default('unknown') }}"

    - name: Include Cisco NXOS verification
      ansible.builtin.include_tasks: cisco_nxos_verify.yml
      when: "'cisco.nxos.nxos' in detected_os"

    - name: Include Arista EOS verification
      ansible.builtin.include_tasks: arista_eos_verify.yml
      when: "'arista.eos.eos' in detected_os"

    - name: Include Cisco IOSXR verification
      ansible.builtin.include_tasks: cisco_iosxr_verify.yml
      when: "'cisco.iosxr.iosxr' in detected_os"
    
    - name: Include Cisco IOS verification
      ansible.builtin.include_tasks: cisco_ios_verify.yml
      when: "'cisco.ios.ios' in detected_os"

    - name: Set default empty list for excluded keys
      set_fact:
        exclude_keys: []

    - name: Define NX-OS specific excluded keys (overrides default if condition met)
      set_fact:
        exclude_keys:
          - memory
          - nxos_compile_time
          - processes
          - uptime
      when: "'cisco.nxos.nxos' in detected_os"

    - name: Define IOS/IOS/EOS XE specific excluded keys
      set_fact:
        exclude_keys:
          - memory
          - last_reload_reason
          - reload_reason
          - build_info.compiled_date
          - uptime
          - processes 
         
      when: ansible_network_os in ['cisco.ios.ios', 'cisco.iosxe.iosxe', 'arista.eos.eos']

    - name: Filter device_info and sort
      ansible.builtin.set_fact:
        filtered_device_info: "{{ gather_result.all_gathered_resources.device_info | dict2items | rejectattr('key', 'in', exclude_keys) | list | sort(attribute='key') | items2dict }}"
    
    - name: Debug
      debug:
        var: gather_result.all_gathered_resources 
  
    - name: Remove device_info from all_gathered_resources
      ansible.builtin.set_fact:
        filtered_all_gathered_resources: "{{ gather_result.all_gathered_resources | dict2items | 
                                            rejectattr('key', 'eq', 'device_info') | 
                                            items2dict }}"
        
    - name: Combine all gathered information with resources first
      ansible.builtin.set_fact:
        combined_gathered_info: "{{ filtered_all_gathered_resources | combine(filtered_device_info) }}"

    - name: Sort all_gathered_info
      ansible.builtin.set_fact:
        combined_gathered_info: "{{ dict(combined_gathered_info | dictsort) }}"

    - name: Sort all_gathered_info
      ansible.builtin.set_fact:
        expected_facts: "{{ dict(expected_facts | dictsort) }}"


    - name: Assert that facts match after filtering
      assert:
        that:
          - combined_gathered_info == expected_facts
        fail_msg: "Facts mismatch after ignoring dynamic keys!"
        success_msg: "Facts match perfectly after ignoring dynamic keys!"

- name: Debug
  ansible.builtin.debug:
    msg: "END network.reports gather operation integration tests on connection={{ ansible_connection }}"